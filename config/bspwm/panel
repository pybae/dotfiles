#!/bin/sh

source ~/.config/bspwm/panel.cfg

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &

# Fix issue with stereo audio devices
# usage: get_vol $DEVNAME
get_vol() {
  dev=$1
  if ! amixer get $dev | egrep Left &>/dev/null; then
    x=$(amixer get $dev | egrep -o "[0-9]+%")
  else
    l=$(amixer get $dev | grep Left | egrep -o "[0-9]+%" | sed s/\%//)
    r=$(amixer get $dev | grep Right | egrep -o "[0-9]+%" | sed s/\%//)
    x=$(($(($l + $r)) / 2))
  fi
  printf "%s\n" ${x}\%
}

# Get Battery Stats
# usage: get_bat $UNUSED $USED
get_bat () {
  unused=$1
  used=$2
  if [ -d /sys/class/power_supply/BAT0 ]; then
    percent=$(acpi | egrep -o [0-9]+%)
    percent=${percent:0:$(expr length $percent - 1)}
  else
    percent="100"
  fi
  bat=$(($percent / 10))
  stars=${unused}
  x=1

  while [ $x -lt $bat ]; do
    stars=${stars}${unused}
    x=$(($x + 1))
  done

  while [ $x -lt 10 ]; do
    stars=${stars}${used}
    x=$(($x + 1))
  done

  printf "%s\n" ${stars}
}

# Return color based on WiFi signal strength
# usage: wifi_strength $DEVICE $WIFI_GOOD $WIFI_FAIR $WIFI_POOR
wifi_strength () {
  dev="$1"
  signal=$(iw dev $dev link | grep signal | egrep -o '[0-9]+')
        
  if [ $signal -lt 68 ]; then
    color=$2
  elif [ $signal -lt 70 ]; then
    color=$3
  else
    color=$4
  fi
  printf "%s\n" "%{F${color}}"
} 

# Loop to check time, battery and volume statuses
while true; do
	VOL=$(get_vol Master)
	BAT=$(get_bat $BATTERY_UNUSED $BATTERY_USED)
  # WiFi signal strength and Archlinux logo
  echo "T $(wifi_strength $WIFI_DEV $WIFI_GOOD $WIFI_FAIR $WIFI_POOR) $(essid -w $WIFI_DEV)" > "$PANEL_FIFO" &
  sleep 0.5s
done &

cat "$PANEL_FIFO" | ~/.config/bspwm/panel_bar | bar -g ${BARWIDTH}x${BARHEIGHT}+${EDGEWIDTH} -f "$PANEL_FONT_FAMILY" -F "$FOREGROUND" -B "$BACKGROUND" -u "$UNDERLINE_WIDTH" &

wait
